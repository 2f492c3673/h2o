language: cpp

env:
  global:
   # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
   #   via the "travis encrypt" command using the project repo's public key
   - secure: "DW71w2slPUijF0OvlHvR3I6Hr1NoBTvGeQdaUTMfYLvNxZDCs9TlHv0ovcdiJnKLUPTBAqM9KHpPLdA36bflWAEZx1ZjFrtjFXnn1V1uQ9v+pP0w8DbbYjMBgncGKFDGJKmTSWXvtYaTz+OYWw2dQSu6dmPLUJx9zs+CYraelBAc7zCl9UidmGw4Cbd0RDY940+Dbkppp/pLKIOPKiXX4gxl34t1pwhBaLHs4smR+QoXzmqESvDSt30wQIugmUxg9GOKaWP75rbUD/PzawHIKKRI12fmLqfbR1f8di0EFeeofHLKfZJMqJ40UFul6yc0IECjBzRvaRcQPRVMeO6ioDURfNK86g/l3Aldtve/w53NolpruaMRok5MOafOd7kuskVS9OyUfBEp9BJxRXWBGcdPswhn/7epe2kHsVRBRjTp2ez7F+J8VRGYzVUkEGjMJJ02ILAkYk49bgcJz053Zrn0ejQD0eDTrIEF1p1JwP4GNtWyHlvSAynnJO6hbPPXM2H9DHqP9Bl8JFUeZiVumKhmqDW5mzfjNadUiJz4F8FMqgyajOj/4lAZkBm+5BvB3YDuxI/tV8q7vHBtsQaUL7uy+fBDKlV6lUtCc4qUoiU6XtLI/PMS7pfD+rG1JUqklZOZ4dQ5t405y/E4zMIHzuv+wceMId+P/Jyzqzc1RjA="

compiler:
  - gcc

addons:
  hosts:
    - 127.0.0.1.xip.io
    - alternate.127.0.0.1.xip.io
  coverity_scan:
    project:
      name: "hbowden/h2o"
      description: "<Your project description here>"
    notification_email: 2trill2spill@gmail.com
    build_command_prepend: mkdir build && cd build && cmake ..
    build_command: cd build && make
    branch_pattern: coverity_scan

before_install:
  # upgrade g++ and libstdc++ to build nghttp2
  - echo -n | openssl s_client -connect scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/ssl/certs/ca-
  - sudo add-apt-repository --yes ppa:ubuntu-toolchain-r/test
  - sudo apt-add-repository --yes ppa:smspillaz/cmake-2.8.12
  - sudo apt-get --yes update
  - sudo apt-get install --yes cmake cmake-data g++-4.8 libstdc++-4.8-dev php5-cgi wget
  - if [ "$CXX" = "g++" ]; then export CXX="g++-4.8"; fi
  - $CXX --version
  # for speed, pre-install deps installed in `before_script` section as ubuntu packages
  - sudo apt-get install -qq cpanminus libipc-signal-perl liblist-moreutils-perl libwww-perl libio-socket-ssl-perl zlib1g-dev

before_script:
  # install libuv >= 1.0.0 (optionally required for building / testing libh2o)
  - curl -L https://github.com/libuv/libuv/archive/v1.0.0.tar.gz | tar xzf -
  - (cd libuv-1.0.0 && ./autogen.sh && ./configure --prefix=/usr && make && sudo make install)
  # install perl modules (mandatory for testing)
  - misc/install-perl-module.pl Net::EmptyPort
  - misc/install-perl-module.pl Scope::Guard
  - misc/install-perl-module.pl Plack
  - misc/install-perl-module.pl FCGI
  - misc/install-perl-module.pl FCGI::ProcManager
  - misc/install-perl-module.pl Starlet
  - misc/install-perl-module.pl JSON
  - misc/install-perl-module.pl Path::Tiny
  - misc/install-perl-module.pl Test::Exception
  # install the `ab` command (a.k.a. ApacheBench; optionally required for running some of the tests)
  - sudo apt-get install -qq apache2-utils
  # install nghttp2 with `--enable-app` (optionally required for running HTTP/2 tests)
  - sudo apt-get install -qq libev-dev
  - curl -L https://github.com/tatsuhiro-t/nghttp2/releases/download/v1.4.0/nghttp2-1.4.0.tar.gz | tar xzf -
  - (cd nghttp2-1.4.0 && ./configure --prefix=/usr --disable-threads --enable-app && make && sudo make install)
  - curl -L https://curl.haxx.se/download/curl-7.50.0.tar.gz | tar xzf -
  - (cd curl-7.50.0 && ./configure --prefix=/usr --with-nghttp2 --disable-shared && make && sudo make install)

script:
  - cmake -DWITH_MRUBY=ON .
  - make all
  - make check
  - sudo make check-as-root
